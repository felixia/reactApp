{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,OAAM,QAAQ,MAAR,CAAV;AACA,IAAI,KAAK,SAAS,UAAlB;AACA,IAAI,MAAM,SAAV;;AAEA,IAAI,GAAJ,CAAQ,QAAQ,SAAR,EAAmB,QAAnB,EAA6B;AACnC,UAAQ,IAD2B;AAEnC,cAAY,KAAK,MAAL,CAAY;AAFW,CAA7B,CAAR;;AAOA,GAAG,EAAH,CAAM,OAAN,EAAe,QAAQ,KAAvB;;AAEA;AACA,IAAI,UAAU,QAAQ,UAAR,CAAd;AACA,IAAI,SAAS,QAAQ,iBAAR,CAAb;AACA,IAAI,YAAY,QAAQ,gBAAR,CAAhB;AACA,IAAI,kBAAkB,QAAQ,2BAAR,CAAtB;;AAGA;AACA,IAAI,GAAJ,CAAQ,OAAO,UAAP,CAAR;AACA;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;;AAEA;AACA,SAAS,OAAT,CAAiB,eAAa,QAAQ,MAArB,GAA4B,GAA5B,GAAgC,QAAQ,MAAzD;AACA;AACA,gBAAgB,UAAhB;;AAEA;AACA,OAAO,GAAP;;AAEA;AACA,IAAI,GAAJ,CAAQ,SAAR,EAAkB,QAAQ,MAAR,CAAe,QAAf,CAAlB;AACA;AACA,IAAI,GAAJ,CAAQ,GAAR,EAAY,QAAQ,MAAR,CAAe,QAAf,CAAZ;;AAEA;AACA,IAAI,MAAJ,CAAW,QAAQ,eAAnB,EAAoC,YAAY;AAC9C,UAAQ,GAAR,CAAY,mCAAiC,QAAQ,eAAzC,GAAyD,GAArE;AACD,CAFD","file":"index-compiled.js","sourcesContent":["//requiring NPM modeles\nvar express = require('express');\nvar morgan = require('morgan');\nvar bodyParser = require('body-parser');\nvar mongoose = require('mongoose');\nvar path =require('path');\nvar db = mongoose.connection;\nvar app = express();\n\napp.use(require('webpack')(compiler, {\n  noInfo: true,\n  publicPath: path.output.filename\n}));\n\n\n\ndb.on('error', console.error);\n\n//requiring local modules\nvar configs = require('./config');\nvar routes = require('./routes/routes');\nvar userModel = require('./models/users');\nvar helperFunctions = require('./helpers/helperFunctions');\n\n\n// Uncomment the following lines to start logging requests to consoles.\napp.use(morgan('combined'));\n// parse application/x-www-form-urlencoded.\napp.use(bodyParser.urlencoded({ extended: false }));\n// parse application/json.\napp.use(bodyParser.json());\n\n//connecting to mongoDB\nmongoose.connect('mongodb://'+configs.dbHost+'/'+configs.dbName);\n//populating data if DB is not already populated.\nhelperFunctions.populateDb();\n\n//Initilizing routes.\nroutes(app);\n\n// serve video files.\napp.use('/videos',express.static('videos'));\n// serve client side code.\napp.use('/',express.static('client'));\n\n//Finally starting the listener\napp.listen(configs.applicationPort, function () {\n  console.log('Example app listening on port '+configs.applicationPort+'!');\n});\n"]}